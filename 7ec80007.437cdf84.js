(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{75:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return s})),a.d(t,"rightToc",(function(){return d})),a.d(t,"default",(function(){return o}));var n=a(3),r=a(7),l=(a(0),a(89)),c=a(92),i=[{id:"hfh51v",type:"wallpaper",title:"Illuminated City at Night [1920 x 1200]",postLink:"https://redd.it/hfh51v",image:"https://i.redd.it/b6x9i2n830751.jpg",thumbnail:"https://b.thumbs.redditmedia.com/mLCk8Bh0N4M8hZafHsbAmw8rM7JEEznsT2nRZSo3GsU.jpg",subreddit:"wallpaper",NSFW:!1,spoiler:!1,createdUtc:1593066557,upvotes:1899,downvotes:0,upvoteRatio:1},{id:"h9glhi",type:"wallpaper",title:"Missing Home by Just Jaker",postLink:"https://redd.it/h9glhi",image:"https://cdnb.artstation.com/p/assets/images/images/027/020/665/large/just-jaker-galax-noise.jpg",thumbnail:"https://b.thumbs.redditmedia.com/4utBLNbsIDDLl46z494PCRkDhmAnapQq9FL7l-07aJo.jpg",subreddit:"ImaginaryFuturism",NSFW:!1,spoiler:!1,createdUtc:1592228591,upvotes:462,downvotes:0,upvoteRatio:1}],b={id:"usage",title:"Usage"},s={unversionedId:"usage",id:"usage",isDocsHomePage:!1,title:"Usage",description:"Available function:",source:"@site/docs\\usage.md",slug:"/usage",permalink:"/reddit-image-fetcher-php/docs/usage",version:"current",sidebar:"docs",previous:{title:"Installation",permalink:"/reddit-image-fetcher-php/docs/installation"}},d=[{value:"Usage",id:"usage",children:[]},{value:"Result",id:"result",children:[]},{value:"Options",id:"options",children:[]}],u={rightToc:d};function o(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},u,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"Available function:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"fetch()")),Object(l.b)("h2",{id:"usage"},"Usage"),Object(l.b)("p",null,"Import the library"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-php"}),"use arifszn\\RedditImageFetcher\\RedditImageFetcher;\n")),Object(l.b)("p",null,"Then"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-php"}),"$redditImageFetcher = new RedditImageFetcher();\n$redditImageFetcher->fetch('meme'); //returns 1 meme\n$redditImageFetcher->fetch('wallpaper'); //returns 1 wallpaper\n")),Object(l.b)("p",null,"Using options:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-php"}),"$redditImageFetcher->fetch('wallpaper', 50); //returns 50 wallpapers \n \n$redditImageFetcher->fetch(\n    'meme',\n    50,\n    [],\n    ['memes', 'funny'],\n    ['dankmemes']\n); //returns 50 memes by adding two and removing 1 subreddits\n")),Object(l.b)("p",null,"It can be used other than fetching memes and wallpapers."),Object(l.b)("p",null,"Custom image fetch from given subreddits:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-php"}),"$redditImageFetcher->fetch(\n    'custom',\n    50, \n    ['cats', 'Catswhoyell', 'sleepingcats']\n); //returns 50 cat images\n")),Object(l.b)("h2",{id:"result"},"Result"),Object(l.b)("p",null,"The function returns array."),Object(l.b)(c.a,{data:i,mdxType:"Result"}),Object(l.b)("h2",{id:"options"},"Options"),Object(l.b)("div",{className:"z-table-wrapper"},Object(l.b)("table",null,Object(l.b)("thead",null,Object(l.b)("tr",null,Object(l.b)("th",{align:"left"},"Property"),Object(l.b)("th",{align:"center"},"Type"),Object(l.b)("th",{align:"left"},"Description"),Object(l.b)("th",{align:"center"},"Default"))),Object(l.b)("tbody",null,Object(l.b)("tr",null,Object(l.b)("td",{align:"left"},"type"),Object(l.b)("td",{align:"center"},"string"),Object(l.b)("td",{align:"left"},"meme, wallpaper or custom image to fetch"),Object(l.b)("td",{align:"center"},"'meme'")),Object(l.b)("tr",null,Object(l.b)("td",{align:"left"},"total"),Object(l.b)("td",{align:"center"},"int"),Object(l.b)("td",{align:"left"},"How many images to get. Max is 50"),Object(l.b)("td",{align:"center"},"1")),Object(l.b)("tr",null,Object(l.b)("td",{align:"left"},"subreddit"),Object(l.b)("td",{align:"center"},"array"),Object(l.b)("td",{align:"left"},"Custom subreddit libray"),Object(l.b)("td",{align:"center"},"[ ]")),Object(l.b)("tr",null,Object(l.b)("td",{align:"left"},"addSubreddit"),Object(l.b)("td",{align:"center"},"array"),Object(l.b)("td",{align:"left"},"Add subreddits to subreddit library"),Object(l.b)("td",{align:"center"},"[ ]")),Object(l.b)("tr",null,Object(l.b)("td",{align:"left"},"removeSubreddit"),Object(l.b)("td",{align:"center"},"array"),Object(l.b)("td",{align:"left"},"Remove subreddits from subreddit library"),Object(l.b)("td",{align:"center"},"[ ]"))))))}o.isMDXComponent=!0},92:function(e,t,a){"use strict";var n=a(0),r=a.n(n),l=(a(93),a(111)),c=a.n(l),i=a(121),b=a.n(i),s=a(95),d=a(96);t.a=function(e){var t=Object(n.useState)([]),a=t[0],l=t[1];return Object(n.useEffect)((function(){e.data?l(e.data):c.a.fetch().then((function(e){console.log(e),l(e)})).catch((function(e){alert("Error on getting example data")}))}),[]),r.a.createElement("div",{className:"card result-component-wrapper shadow-dim"},r.a.createElement("div",{className:"card__body"},r.a.createElement("div",{className:"json-viewer__body"},a.length?r.a.createElement(b.a,{getItemString:function(e,t,a,n){return r.a.createElement("span",null)},data:a,hideRoot:!1,invertTheme:!1,shouldExpandNode:function(){return!0},keyPath:["result"]}):r.a.createElement("span",{className:"fetching-now"},"Fetching ",r.a.createElement(s.a,{icon:d.b,spin:!0})))))}},93:function(e,t,a){}}]);